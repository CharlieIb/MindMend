######################### Test data for Users/Notifications/SupportRequest ##########################
# User table
user1 = User(username="bob", email="bob@mail.com", role="Normal")
user2 = User(username="mischa", email="mischa@mail.com", role="Admin")
user3 = User(username="charlie", email="charlie@mail.com", role="Admin")
user4 = User(username="Aravind", email="aravind@mail.com", role="Admin")
user1.set_password("bob.pw")
user2.set_password("mischa.pw")
user3.set_password("mischa.pw")
user4.set_password("mischa.pw")


db.session.add(user1)
db.session.add(user2)
db.session.add(user3)
db.session.add(user4)
db.session.commit()



# Notifications (not representative of actual messages

notification1 = Notification(
    user_id=user1.id,
    message="Your test results are ready!",
    is_read=False,
)

notification2 = Notification(
    user_id=user2.id,
    message="New therapeutic recommendations available.",
    is_read=False,
)

# Adding notifications to the session
db.session.add(notification1)
db.session.add(notification2)
db.session.commit()


## Support request(not representative of final)
support_request1 = SupportRequest(
    user_id=user1.id,
    description="Need help with understanding my test results.",
)

support_request2 = SupportRequest(
    user_id=user2.id,
    description="Having trouble logging in.",
)

# Adding support requests to the session
db.session.add(support_request1)
db.session.add(support_request2)
db.session.commit()

############################ Checking the data is there ###############################

# Query all users
users = User.query.all()
for user in users:
    print(f"User ID: {user.id}, Username: {user.username}, Email: {user.email}, Role: {user.role}")

# Query all locations
locations = Location.query.all()
for location in locations:
    print(f"Location ID: {location.location_id}, Name: {location.name}")

# Query all activities
activities = Activity.query.all()
for activity in activities:
    print(f"Activity ID: {activity.activity_id}, Name: {activity.name}")

# Query all people
people = Person.query.all()
for person in people:
    print(f"Person ID: {person.person_id}, Name: {person.name}")

# Query all emotion logs
emotion_logs = EmotionLog.query.all()
for log in emotion_logs:
    print(f"Log ID: {log.log_id}, User ID: {log.user_id}, Emotion: {log.emotion}, Steps: {log.steps}, Activity Duration: {log.activity_duration}, Heart Rate: {log.heart_rate}, Blood Pressure: {log.blood_pressure}, Free Notes: {log.free_notes}, Location ID: {log.location_id}, Activity ID: {log.activity_id}, Person ID: {log.person_id}")


# Query all test results
test_results = TestResult.query.all()
for result in test_results:
    print(f"Test ID: {result.test_id}, User ID: {result.user_id}, Condition ID: {result.cond_id}, Result: {result.result}, Timedate: {result.timedate}")#


# Query all notifications
notifications = Notification.query.all()
for notification in notifications:
    print(f"Notification ID: {notification.notification_id}, User ID: {notification.user_id}, Message: {notification.message}, Is Read: {notification.is_read}, Time: {notification.time}")


# Query all support requests
support_requests = SupportRequest.query.all()
for request in support_requests:
    print(f"Request ID: {request.request_id}, User ID: {request.user_id}, Description: {request.description}, Time: {request.time}")







